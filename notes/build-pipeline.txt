
(1) Staging

As a pre-requisite, make sure the steps in the Data Staging writeup 
have been tended to:

   notes/Data-Staging.rst

Also, make sure your environment is initialized:

  source bin/init-env.rc

(2) Create 'flat' schema, and import raw data:

  bin/dopg.py -f sql/create-schema-flat.sql
  bin/import-rawdata.sh 

(3) Scrub addresses + build indices:

  # First, create a few public functions.
  bin/dopg.py -f sql/create-functions.sql 
  bin/dopg.py -f sql/create-first-last.sql
  # These should take under a minute each. 
  bin/dopg.py -f sql/fix-contact-addresses.sql 
  bin/dopg.py -f sql/fix-registration-addresses.sql 
  bin/dopg.py -f sql/create-indexes-flat.sql 

In the next steps, we create the ...

(4) 'core' schema

  bin/dopg.py -f sql/create-schema-core.sql 
  bin/dopg.py -f sql/create-views-core.sql 

(5) 'push' schema

This phase is slightly different, in that the 'create schema'
script also populates its tables:

  bin/dopg.py -f sql/create-schema-push.sql 
  bin/dopg.py -f sql/create-indexes-push.sql

(6) 'meta' schema

  bin/dopg.py -f sql/create-schema-meta.sql 
  bin/dopg.py -f sql/create-views-meta.sql 

(7) 'hard' schema

The 'create' statement also populates the tables + grants 
privilegs to our read user:

  bin/dopg.py -f sql/create-schema-hard.sql 
  bin/dopg.py -f sql/create-tables-hard.sql 
  bin/dopg.py -f sql/create-indexes-hard.sql

BTW it'd be worth noticing the psql output for each of the the 'create' script; 
it should emit meaningful rowcounts for the tables we're creating, e.g.:

  DROP SCHEMA
  CREATE SCHEMA
  SELECT 157666
  SELECT 577071
  SELECT 141341
  GRANT
  GRANT
  COMMIT

(8) grant readuser priveleges

Since this step requires superuser access, it needs to be done with a 
raw shell command (as the 'dopg.py' utility is hard-wired to use the 
writeuser credentials):

   psql -U postgres -d nyc1 -f sql/grant-privileges-readuser.sql




TODO: provide detail

  We're now ready to export the 'hard' schema as per the steps 
  given in notes/export-database.txt.

  However, if you're running the REST gateway on the same host
  then you can also start running the daemon scrips to connect to
  these tables directly.





